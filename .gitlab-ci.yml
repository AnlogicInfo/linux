# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  CHECK_PATCH_ERRORS: 0

stages:          # List of stages for jobs, and their order of execution
  - checkpatch
  - build


checkpatch_ci:
  stage: checkpatch
  tags:
    - checkpatch
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - scripts/checkpatch.pl --git $CI_MERGE_REQUEST_DIFF_BASE_SHA...HEAD || let CHECK_PATCH_ERRORS++
    - for i in $(git diff --name-only $CI_MERGE_REQUEST_DIFF_BASE_SHA...HEAD | grep -ie ".*\.dtsi\?\|.*\.[hc]"); do scripts/checkpatch.pl -f $i || let CHECK_PATCH_ERRORS++; done;
    - [ $CHECK_PATCH_ERRORS -eq 0 ]
  allow_failure: true

build_ci:
  stage: build
  tags:
    - checkpatch
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - ./make_apu.sh
    - ./make_rpu.sh
